[package]
name = "blue_scout"
version = "0.1.0"
edition = "2021"

[workspace]
members = [".", "blue_scout_macros"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
leptos = { version = "0.7.0", features = ["nightly"] }
leptos_router = { version = "0.7.0", features = ["nightly"] }
axum = { version = "0.7", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
leptos_axum = { version = "0.7.0", optional = true }
leptos_meta = { version = "0.7.0" }
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
wasm-bindgen = { version = "=0.2.100", optional = true }
leptos_reactive = { version = "0.6.15", features = ["nightly"] }
web-sys = { version = "0.3.77", features = [
    "Window",
    "Storage",
    "InputEvent",
    "HtmlInputElement",
] }
# Server only
once_cell = { version = "1.21.1", optional = true }
reqwest = { version = "0.12.15", features = [
    "blocking",
    "json",
], optional = true }
dotenv = { version = "0.15.0", optional = true }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = { version = "1.0", optional = true }
anyhow = { version = "1.0.97", optional = true }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
tracing = "0.1.41"
duckdb = { version = "1.2.1", features = [], optional = true }
chrono = "0.4.40"
tower = { version = "0.5.2", optional = true }
csv = { version = "1.1.5", optional = true }
rust_xlsxwriter = { version = "0.85.0", optional = true }
blue_scout_macros = { version = "0.1.0", path = "./blue_scout_macros" }
strum = "0.27.1"
strum_macros = "0.27.1"

[features]
default = ["hydrate", "ssr"]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:leptos_axum",
    "dep:once_cell",
    "dep:reqwest",
    "dep:dotenv",
    "dep:serde_json",
    "dep:anyhow",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos_reactive/ssr",
    "dep:tower",
    "dep:duckdb",
    "dep:rust_xlsxwriter",
]
hydrate = ["leptos/hydrate", "dep:console_error_panic_hook", "dep:wasm-bindgen"]
rust_xlsxwriter = ["dep:rust_xlsxwriter"]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "blue_scout"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "output/main.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
